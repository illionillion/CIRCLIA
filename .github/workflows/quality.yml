name: Quality

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main", "dev"]

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install node_modules
        run: |
          node --version
          pnpm install
      - name: Run ESLint
        run: pnpm eslint .
          --config eslint.config.mjs
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install node_modules
        run: |
          node --version
          pnpm install
      - name: Run format
        run: pnpm format:check
        continue-on-error: true

  type_script:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install node_modules
        run: |
          node --version
          pnpm install

      - name: Run typecheck
        run: pnpm generate && pnpm typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install node_modules
        run: |
          node --version
          pnpm install

      - name: Set up Database
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
        run: |
          pnpm migrate
          pnpm generate
          pnpm seed

      - name: Run Build
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
        run: pnpm build
